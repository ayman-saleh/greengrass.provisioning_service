version: '3.8'

services:
  # Mock AWS IoT endpoint
  mock-aws-iot:
    image: mockserver/mockserver:latest
    ports:
      - "8443:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/aws-iot-expectations.json
    volumes:
      - ./docker/mock-aws/mockserver.properties:/config/mockserver.properties
      - ./docker/mock-aws/aws-iot-expectations.json:/config/aws-iot-expectations.json
    networks:
      - test-network

  # Local S3 mock for Greengrass artifacts
  mock-s3:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./docker/mock-aws/s3-data:/data
    networks:
      - test-network

  # Test database with sample data
  test-database:
    image: keinos/sqlite3:latest
    volumes:
      - ./docker/test-data:/data
      - ./docker/test-data/init-db.sql:/init.sql
    command: sqlite3 /data/devices.db < /init.sql
    networks:
      - test-network

  # The service under test
  greengrass-provisioning:
    build:
      context: .
      target: test
    depends_on:
      - mock-aws-iot
      - mock-s3
      - test-database
    volumes:
      - ./docker/test-data/devices.db:/opt/greengrass/config/devices.db
      - ./docker/test-results:/test-results
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    environment:
      AWS_REGION: us-east-1
      IOT_ENDPOINT: mock-aws-iot:1080
      S3_ENDPOINT: http://mock-s3:9000
      TEST_MODE: "true"
    privileged: true
    networks:
      - test-network
    command: /test/run-integration-tests.sh

  # Test runner that validates the provisioning
  test-validator:
    build:
      context: .
      target: test
    depends_on:
      - greengrass-provisioning
    volumes:
      - ./docker/test-results:/test-results
    networks:
      - test-network
    command: python3 /test/validate_provisioning.py

networks:
  test-network:
    driver: bridge 